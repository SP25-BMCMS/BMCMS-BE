// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/@prisma/client-Task"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_TASKS_SERVICE")
}

model Task {
  task_id         String    @id @default(uuid()) // Changed to UUID
  description     String
  status          Status
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
  crack_id        String
  schedule_job_id String
  // Mối quan hệ 1:N với WorkLogs
  workLogs        WorkLog[]

  // Mối quan hệ 1:N với TaskAssignments
  taskAssignments TaskAssignment[]

  // Mối quan hệ 1:N với Feedbacks
  feedbacks       Feedback[]

  // Mối quan hệ 1:N với Inspections
}

model WorkLog {
  worklog_id  String        @id @default(uuid()) // Changed to UUID
  task_id     String
  title       String
  description String
  status      WorkLogStatus // Trạng thái của WorkLog

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // Mối quan hệ N:1 với Task
  task Task @relation(fields: [task_id], references: [task_id])
}

enum WorkLogStatus {
  INIT_INSPECTION // Bước 1: Create Init Inspection
  WAIT_FOR_DEPOSIT // Bước 2: Wait for Deposited from Resident
  EXECUTE_CRACKS // Bước 3: Staff Execute Cracks
  CONFIRM_NO_PENDING_ISSUES // Bước 4: Confirm No Pending Issues
  FINAL_REVIEW // Bước 5: Kiểm tra lần cuối (tuỳ chọn)
  CANCELLED
}

model TaskAssignment {
  assignment_id String           @id @default(uuid()) // Changed to UUID
  task_id       String
  employee_id   String
  description   String
  status        AssignmentStatus
  created_at    DateTime         @default(now())
  updated_at    DateTime         @updatedAt

  // Mối quan hệ N:1 với Task
  task Task @relation(fields: [task_id], references: [task_id])

  // Mối quan hệ 1:N với Inspection
  inspections Inspection[]
}

model Inspection {
  inspection_id      String   @id @default(uuid())
  task_assignment_id String
  inspected_by       String
  image_url          String?
  description        String
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt
  status             InspectionStatus
  total_cost         Decimal  @db.Decimal(10, 2)
  locationDetailId   String   @unique    
  // Mối quan hệ N:1 với TaskAssignment
  taskAssignment TaskAssignment @relation(fields: [task_assignment_id], references: [assignment_id])

  // Mối quan hệ 1:N với RepairMaterial
  repairMaterials RepairMaterial[]
}

enum InspectionStatus {
  Notyetverify
  Verify
  UnConfirm
  Confirm
  Completed
  Other
}

model RepairMaterial {
  repair_material_id String   @id @default(uuid())
  material_id        String
  quantity           Int
  unit_cost          Decimal  @db.Decimal(10, 2)
  total_cost         Decimal  @db.Decimal(10, 2)
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt
 status             RepairStatus     @default(Pending)
  remaining_quantity Int?             // Chỉ có nếu Completed

  // Mối quan hệ N:1 với Inspection
  inspection_id String
  inspection    Inspection @relation(fields: [inspection_id], references: [inspection_id])

  // Mối quan hệ N:1 với Material
  material Material @relation(fields: [material_id], references: [material_id])
}

enum RepairStatus {
  Pending
  Completed
}

model Material {
  material_id    String   @id @default(uuid())
  name           String
  description    String?
  unit_price     Decimal  @db.Decimal(10, 2)
  stock_quantity Int
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  status         MaterialStatus @default(ACTIVE)

  // Mối quan hệ 1:N với RepairMaterial
  repairMaterials RepairMaterial[]
}

enum MaterialStatus {
  ACTIVE
  INACTIVE
  DELETED
}

model Feedback {
  feedback_id String   @id @default(uuid())
  task_id     String
  feedback_by String
  comments    String
  rating      Int      @default(1) // Rating should be between 1 and 5
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  status      FeedbackStatus @default(ACTIVE)

  // Mối quan hệ N:1 với Task
  task Task @relation(fields: [task_id], references: [task_id])
}
enum FeedbackStatus {
  ACTIVE
  INACTIVE
  DELETED
}


enum Status {
  Assigned
  Completed
}

enum AssignmentStatus {
  Pending
  Verified
  Unverified
  InFixing
  Fixed
  Confirmed
  Reassigned
}
