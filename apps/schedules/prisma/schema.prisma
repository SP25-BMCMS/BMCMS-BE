generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/@prisma/client-schedule"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_SCHEDULE_SERVICE")
}

model MaintenanceCycle {
  cycle_id    String           @id @default(uuid())
  frequency   Frequency
  basis       MaintenanceBasis @default(OperationalExperience)
  device_type DeviceType       @default(Other)
  schedules   Schedule[]
}

model Schedule {
  schedule_id     String           @id @default(uuid())
  schedule_name   String           @db.VarChar(100)
  description     String?
  start_date      DateTime?        @db.Date
  end_date        DateTime?        @db.Date
  created_at      DateTime         @default(now()) @db.Timestamp(6)
  updated_at      DateTime         @default(now()) @updatedAt @db.Timestamp(6)
  schedule_status ScheduleStatus   @default(InProgress)
  cycle_id        String
  cycle           MaintenanceCycle @relation(fields: [cycle_id], references: [cycle_id])
  scheduleJobs    ScheduleJob[]
}

model ScheduleJob {
  schedule_job_id  String            @id @default(uuid())
  schedule_id      String
  start_date       DateTime?         @db.Date
  end_date         DateTime?         @db.Date
  run_date         DateTime          @db.Date
  status           ScheduleJobStatus
  created_at       DateTime          @default(now()) @db.Timestamp(6)
  updated_at       DateTime          @default(now()) @updatedAt @db.Timestamp(6)
  buildingDetailId String
  inspection_id    String?
  schedule         Schedule          @relation(fields: [schedule_id], references: [schedule_id])
}

enum Frequency {
  Daily
  Weekly
  Monthly
  Yearly
  Specific
}

enum ScheduleJobStatus {
  Pending
  InProgress
  Completed
  Cancel
}

enum ScheduleStatus {
  InProgress
  Completed
  Cancel
}

enum MaintenanceBasis {
  ManufacturerRecommendation
  LegalStandard
  OperationalExperience
  Other
}

enum DeviceType {
  Elevator
  FireProtection
  Electrical
  Plumbing
  HVAC
  CCTV
  Generator
  Lighting
  AutomaticDoor
  FireExtinguisher
  Other
}
