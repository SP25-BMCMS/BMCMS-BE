// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/@prisma/client-Schedule"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_SCHEDULE_SERVICE")
}

model Device {
  device_id     String    @id @default(uuid())
  name          String    @db.VarChar(100)
  type          String    @db.VarChar(50) // Thang máy, PCCC, Điện, Nước,...
  manufacturer  String?   @db.VarChar(100)
  model         String?   @db.VarChar(100)
  location      String?   @db.VarChar(100)
  technical_records TechnicalRecord[]
  maintenanceHistories MaintenanceHistory[]
  contract_id String?
  Contract Contract? @relation(fields: [contract_id], references: [contract_id])
}

model TechnicalRecord {
  record_id   String    @id @default(uuid())
  device_id   String
  file_name   String    @db.VarChar(255)
  file_type   String    @db.VarChar(50) // Bản vẽ, Hướng dẫn bảo trì,...
  upload_date DateTime  @db.Date
  device      Device    @relation(fields: [device_id], references: [device_id])
}

model MaintenanceHistory {
  maintenance_id String    @id @default(uuid())
  device_id      String
  date_performed DateTime  @db.Date
  description    String?
  cost           Decimal?
  device         Device    @relation(fields: [device_id], references: [device_id])
}

model MaintenanceCycle {
  cycle_id   String    @id @default(uuid())
  device_type String    @db.VarChar(50)
  frequency  Int
  basis      String    @db.VarChar(255) // Khuyến cáo NSX, Quy chuẩn pháp lý, Thực tế vận hành
}

model Contract {
  contract_id String @id @default(uuid())
  start_date DateTime? @db.Date
  end_date DateTime? @db.Date
  vendor String? @db.VarChar(255)
  devices Device[]
}

model Schedule {
    schedule_id   String    @id @default(uuid())
    schedule_name String    @db.VarChar(100)
    schedule_type ScheduleType
    description   String?
    start_date    DateTime? @db.Date
    end_date      DateTime? @db.Date
    created_at    DateTime  @default(now()) @db.Timestamp
    updated_at    DateTime  @default(now()) @updatedAt @db.Timestamp
    scheduleJobs  ScheduleJob[]
    schedule_status ScheduleStatus @default(InProgress)
  }

model ScheduleJob {
  schedule_job_id String    @id @default(uuid())
  schedule_id     String
  run_date        DateTime  @db.Date
  status          ScheduleJobStatus
  created_at      DateTime  @default(now()) @db.Timestamp
  updated_at      DateTime  @default(now()) @updatedAt @db.Timestamp
  building_id     String
  schedule        Schedule  @relation(fields: [schedule_id], references: [schedule_id])

}

enum ScheduleType {
  Daily
  Weekly
  Monthly
  Yearly
  Specific
}

enum ScheduleJobStatus {
  Pending
  InProgress
  Completed
  Cancel
}

enum ScheduleStatus {
  InProgress 
  Completed
  Cancel
}
