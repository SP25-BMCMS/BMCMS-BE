generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/@prisma/client-Schedule"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_SCHEDULE_SERVICE")
}

model Contract {
  contract_id String    @id @default(uuid())
  start_date  DateTime? @db.Date
  end_date    DateTime? @db.Date
  vendor      String?   @db.VarChar(255)

  devices Device[]
}

model Device {
  device_id    String     @id @default(uuid())
  name         String     @db.VarChar(100)
  type         DeviceType @default(Other)
  manufacturer String?    @db.VarChar(100)
  model        String?    @db.VarChar(100)
  location     String?    @db.VarChar(100)

  contract_id String?
  Contract    Contract? @relation(fields: [contract_id], references: [contract_id])

  technical_records     TechnicalRecord[]
  maintenance_histories MaintenanceHistory[]
}

model TechnicalRecord {
  record_id   String   @id @default(uuid())
  device_id   String
  file_name   String   @db.VarChar(255)
  file_type   String   @db.VarChar(50) // Bản vẽ, Hướng dẫn bảo trì,...
  upload_date DateTime @db.Date

  device Device @relation(fields: [device_id], references: [device_id])
}

model MaintenanceHistory {
  maintenance_id String   @id @default(uuid())
  device_id      String
  date_performed DateTime @db.Date
  description    String?
  cost           Decimal?

  device Device @relation(fields: [device_id], references: [device_id])
}

model MaintenanceCycle {
  cycle_id    String           @id @default(uuid())
  device_type String           @db.VarChar(50)
  frequency   Frequency
  basis       MaintenanceBasis @default(OperationalExperience)

  schedules Schedule[]
}

model Schedule {
  schedule_id     String           @id @default(uuid())
  schedule_name   String           @db.VarChar(100)
  cycle_id        String
  description     String?
  start_date      DateTime?        @db.Date
  end_date        DateTime?        @db.Date
  created_at      DateTime         @default(now()) @db.Timestamp
  updated_at      DateTime         @default(now()) @updatedAt @db.Timestamp
  schedule_status ScheduleStatus   @default(InProgress)
  cycle           MaintenanceCycle @relation(fields: [cycle_id], references: [cycle_id])
  scheduleJobs    ScheduleJob[]
}

model ScheduleJob {
  schedule_job_id String            @id @default(uuid())
  schedule_id     String
  run_date        DateTime          @db.Date
  status          ScheduleJobStatus
  created_at      DateTime          @default(now()) @db.Timestamp
  updated_at      DateTime          @default(now()) @updatedAt @db.Timestamp
  building_id     String

  schedule Schedule @relation(fields: [schedule_id], references: [schedule_id])
}

enum Frequency {
  Daily
  Weekly
  Monthly
  Yearly
  Specific
}

enum ScheduleJobStatus {
  Pending
  InProgress
  Completed
  Cancel
}

enum ScheduleStatus {
  InProgress
  Completed
  Cancel
}

enum MaintenanceBasis {
  ManufacturerRecommendation
  LegalStandard
  OperationalExperience
  Other
}

enum DeviceType {
  Elevator // Thang máy
  FireProtection // PCCC
  Electrical // Hệ thống điện
  Plumbing // Cấp thoát nước
  HVAC // Điều hòa thông gió
  CCTV // Camera giám sát
  Generator // Máy phát điện
  Lighting // Chiếu sáng
  AutomaticDoor // Cửa cuốn / barrier
  FireExtinguisher // Bình chữa cháy

  Other // Thiết bị khác
}
